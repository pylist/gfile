package main

import (
	"encoding/json"
	"fmt"
	"gfile/requests"
	"io/ioutil"
	"net/http"
	"strings"
)

func GetUrl(url string)  {
	client := &http.Client{}
	req, err := http.NewRequest("GET", url, strings.NewReader("name=xin"))
	if err != nil {
		panic(err)
	}

	req.Header.Set("token", "ssssss")
	resp, err := client.Do(req)
	if err != nil {
		panic(err)
	}
	defer resp.Body.Close()
	body, err := ioutil.ReadAll(resp.Body)
	fmt.Println(json.Marshal(body))
}

type Data struct {
	CreateTime     string `json:"createTime"`
	DownloadURL string `json:"downloadUrl,omitempty"`
	FileID         string `json:"fileId"`
	FileIDDigest   string `json:"fileIdDigest"`
	FileName       string `json:"fileName"`
	FileSize    int    `json:"fileSize,omitempty"`
	FileType       string `json:"fileType"`
	GroupSpaceInfo struct {
		GroupSpaceType int `json:"groupSpaceType"`
	} `json:"groupSpaceInfo"`
	IsFolder    bool   `json:"isFolder"`
	IsStarred   bool   `json:"isStarred"`
	LastOpTime  string `json:"lastOpTime"`
	ParentID    string `json:"parentId"`


	MediaType   int    `json:"mediaType,omitempty"`
}

type AutoGenerated struct {
	Data []struct {
		CreateTime     string `json:"createTime"`
		FileID         string `json:"fileId"`
		FileIDDigest   string `json:"fileIdDigest"`
		FileName       string `json:"fileName"`
		FileType       string `json:"fileType"`
		GroupSpaceInfo struct {
			GroupSpaceType int `json:"groupSpaceType"`
		} `json:"groupSpaceInfo"`
		IsFolder    bool   `json:"isFolder"`
		IsStarred   bool   `json:"isStarred"`
		LastOpTime  string `json:"lastOpTime"`
		ParentID    string `json:"parentId"`
		DownloadURL string `json:"downloadUrl,omitempty"`
		FileSize    int    `json:"fileSize,omitempty"`
		MediaType   int    `json:"mediaType,omitempty"`
	} `json:"data"`
	PageNum  int `json:"pageNum"`
	PageSize int `json:"pageSize"`
	Path     []struct {
		FileID    string `json:"fileId"`
		FileName  string `json:"fileName"`
		IsCoShare int    `json:"isCoShare"`
	} `json:"path"`
	RecordCount int `json:"recordCount"`
}

func main()  {
	//GetUrl("http://192.168.31.13:8089/ping")
	//params := requests.Parse(map[string]string{"name":"xin","age":"18"})
	headers := map[string]string{
		"cookie": "COOKIE_LOGIN_USER=FF5F33F849B1AD7407AC19FEF689942FAE8C751D7A035BC9D5C0F268C8045F4AF2E2F5FE0D3677899278459B6EA59D91D2E983B83E652913B9B44B55",
		"Content-Type": "application/json; charset=UTF-8",
	}
	params := map[string]string{
		"fileId": "-11",
		"pageNum": "1",
		"pageSize": "60",
	}
	resp, err := requests.Get("https://cloud.189.cn/v2/listFiles.action", headers, params)
	if err != nil {
		panic(err)
	}
	data := make(map[string]interface{})
	json.Unmarshal(resp, &data)
	for k, v := range data["data"].([]interface{}) {
		fmt.Println(k,v.(map[string]interface{})["fileName"])
	}
}
